ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +geom_smooth(mapping = aes(x = total_time, y = Score.answers))
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(-20, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(-5, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(-5, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(-5, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
cor(answers$mean_word_length,answers$Score)
answers
ggplot(answers,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(lubridate)
answers<-read_csv(file="Answers_trunc.csv",col_types=cols(CreationDate=col_datetime()))
questions<-read_csv(file="Questions_trunc.csv",col_types=cols(CreationDate=col_datetime()))
answers<-answers%>%select(-X7)
questions<-questions%>%select(-X7)
merged <- answers %>%
left_join(questions, c('ParentId' = 'Id'),suffix=c(".answers",".questions"))
merged <- merged %>%
mutate(total_time = CreationDate.answers - CreationDate.questions) %>%
filter(total_time>0)
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
answers<-
for(i in 1:nrow(answers)){
answers[i,7]=mean(str_length(str_extract_all(answers[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions)){
questions[i,7]=mean(str_length(str_extract_all(questions[i,6],boundary("word"))[[1]]))
}
answers<-answers%>%rename("mean_word_length"=V7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(lubridate)
answers<-read_csv(file="Answers_trunc.csv",col_types=cols(CreationDate=col_datetime()))
questions<-read_csv(file="Questions_trunc.csv",col_types=cols(CreationDate=col_datetime()))
answers<-answers%>%select(-X7)
questions<-questions%>%select(-X7)
answers<-answers%>%rename("mean_word_length"=V7)
answers<-
for(i in 1:nrow(answers)){
answers[i,7]=mean(str_length(str_extract_all(answers[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions)){
questions[i,7]=mean(str_length(str_extract_all(questions[i,6],boundary("word"))[[1]]))
}
answers<-answers%>%rename("mean_word_length"=V7)
answers
answers<-answers%>%rename("mean_word_length"=V7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(lubridate)
answers<-read_csv(file="Answers_trunc.csv",col_types=cols(CreationDate=col_datetime()))
questions<-read_csv(file="Questions_trunc.csv",col_types=cols(CreationDate=col_datetime()))
answers<-answers%>%select(-X7)
questions<-questions%>%select(-X7)
merged <- answers %>%
left_join(questions, c('ParentId' = 'Id'),suffix=c(".answers",".questions"))
merged <- merged %>%
mutate(total_time = CreationDate.answers - CreationDate.questions) %>%
filter(total_time>0)
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
answers_Clean<-
for(i in 1:nrow(answers)){
answers[i,7]=mean(str_length(str_extract_all(answers[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions)){
questions[i,7]=mean(str_length(str_extract_all(questions[i,6],boundary("word"))[[1]]))
}
answers
answers<-answers%>%rename("mean_word_length"=V7)
questions<-questions%>%rename("mean_word_length"=V7)
answers
ggplot(answers,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()
ggplot(answers,aes(mean_word_length))+geom_density()
answers_Cleaned<-answers%>%mutate("Body"=str_remove(Body,"<.+?>"))
answers_cleaned
answers_cleaned<-answers%>%mutate("Body"=str_remove(Body,"<.+?>"))
answers_cleaned
for(i in 1:nrow(answers)){
answers[i,7]=mean(str_length(str_extract_all(answers[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions)){
questions[i,7]=mean(str_length(str_extract_all(questions[i,6],boundary("word"))[[1]]))
}
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>"))
answers_cleaned
for(i in 1:nrow(answers)){
answers[i,7]=mean(str_length(str_extract_all(answers[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions)){
questions[i,7]=mean(str_length(str_extract_all(questions[i,6],boundary("word"))[[1]]))
}
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("Body"=str_remove_all"\\[rn]")
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("Body"=str_remove_all(Body,"\\[rn]"))
answers_cleaned
for(i in 1:nrow(answers)){
answers[i,7]=mean(str_length(str_extract_all(answers[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions)){
questions[i,7]=mean(str_length(str_extract_all(questions[i,6],boundary("word"))[[1]]))
}
str_extract(answers_cleaned$body[1],"\\[rn]")
str_extract(answers_cleaned$Body[1],"\\[rn]")
str_extract(answers_cleaned$Body[1],"\\[rn]")
str_extract(answers_cleaned$Body[1],"\\\\[rn]")
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("Body"=str_remove_all(Body,"\\\\[rn]"))
answers_cleaned
for(i in 1:nrow(answers)){
answers[i,7]=mean(str_length(str_extract_all(answers[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions)){
questions[i,7]=mean(str_length(str_extract_all(questions[i,6],boundary("word"))[[1]]))
}
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>"))
questions_cleaned<-questions%>%mutate("Body"=str_remove_all(Body,"<.+?>"))
for(i in 1:nrow(answers_cleaned)){
answers[i,7]=mean(str_length(str_extract_all(answers_cleaned[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions_cleaned)){
questions[i,7]=mean(str_length(str_extract_all(questions_cleaned[i,6],boundary("word"))[[1]]))
}
answers_cleaned
answers_cleaned<-answers_cleaned%>%rename("mean_word_length"=V7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(lubridate)
answers<-read_csv(file="Answers_trunc.csv",col_types=cols(CreationDate=col_datetime()))
questions<-read_csv(file="Questions_trunc.csv",col_types=cols(CreationDate=col_datetime()))
answers<-answers%>%select(-X7)
questions<-questions%>%select(-X7)
merged <- answers %>%
left_join(questions, c('ParentId' = 'Id'),suffix=c(".answers",".questions"))
merged <- merged %>%
mutate(total_time = CreationDate.answers - CreationDate.questions) %>%
filter(total_time>0)
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>")) #removing HTML tags since they shouldn't be counted as words
questions_cleaned<-questions%>%mutate("Body"=str_remove_all(Body,"<.+?>"))
for(i in 1:nrow(answers_cleaned)){
answers[i,7]=mean(str_length(str_extract_all(answers_cleaned[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions_cleaned)){
questions[i,7]=mean(str_length(str_extract_all(questions_cleaned[i,6],boundary("word"))[[1]]))
}
answers_cleaned
answers_cleaned<-answers_cleaned%>%rename("mean_word_length"=V7)
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>")) #removing HTML tags since they shouldn't be counted as words
questions_cleaned<-questions%>%mutate("Body"=str_remove_all(Body,"<.+?>"))
for(i in 1:nrow(answers_cleaned)){
answers_cleaned[i,7]=mean(str_length(str_extract_all(answers_cleaned[i,6],boundary("word"))[[1]]))
}
for(i in 1:nrow(questions_cleaned)){
questions_cleaned[i,7]=mean(str_length(str_extract_all(questions_cleaned[i,6],boundary("word"))[[1]]))
}
answers_cleaned
answers_cleaned<-answers_cleaned%>%rename("mean_word_length"=V7)
questions_cleaned<-questions_cleaned%>%rename("mean_word_length"=V7)
ggplot(answers_cleaned,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()
ggplot(answers_cleaned,aes(mean_word_length))+geom_density()
ggplot(questions_cleaned,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()
ggplot(questions_cleaned,aes(mean_word_length))+geom_density()
ggplot(answers_cleaned,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()+labs(title="Answer Mean word length and Score",x="Mean Word Length",y="Score")
ggplot(answers_cleaned,aes(mean_word_length))+geom_density()+labs(title="Histogram of Mean word Length for Answers",x="Mean Word Length")
ggplot(questions_cleaned,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()+labs(title="Question Mean word length and Score",x="Mean Word Length",y="Score")
ggplot(questions_cleaned,aes(mean_word_length))+geom_density()+labs(title="Histogram of Mean word Length for Questions",x="Mean Word Length")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(lubridate)
answers<-read_csv(file="Answers_trunc.csv",col_types=cols(CreationDate=col_datetime()))
questions<-read_csv(file="Questions_trunc.csv",col_types=cols(CreationDate=col_datetime()))
answers<-answers%>%select(-X7)
questions<-questions%>%select(-X7)
merged <- answers %>%
left_join(questions, c('ParentId' = 'Id'),suffix=c(".answers",".questions"))
merged <- merged %>%
mutate(total_time = CreationDate.answers - CreationDate.questions) %>%
filter(total_time>0)
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
questions <- questions %>% mutate(letters_body = str_count(Body, regex("[a-z]", ignore_case = T)))
ggplot(data = questions, mapping = aes(x = letters_body, y = Score)) + geom_jitter() + xlim(c(0, 3000)) + labs(title = "Question Body Length vs. Score", x = "Number of letters in body of question", y = "Score")
ggplot(data = questions, mapping = aes(x = letters_body, y = Score)) + geom_jitter() + xlim(c(0, 500))+ labs(title = "Question Body Length vs. Score", x = "Number of letters in body of question", y = "Score")
ggplot(data = questions, mapping = aes(x = letters_body)) + geom_density() + labs(title = "Question Body Length vs. Density", x = "Number of letters in body of question", y = "Density of question body length")
ggplot(data = questions, mapping = aes(x = letters_body)) + geom_density() + xlim(c(0, 1000))+ labs(title = "Question Body Length vs. Density", x = "Number of letters in body of question", y = "Density of question body length")
answers <- answers %>% mutate(python_true = str_detect(Body, regex("python", ignore_case = T)))
ggplot(data = answers, mapping = aes(x = python_true, y = Score)) + geom_jitter() + labs(title = "Usage of the word python(true or false) vs. Score", x = "Usage of the word python in the response (true or false)", y = "Score")
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>")) #removing HTML tags since they shouldn't be counted as words
questions_cleaned<-questions%>%mutate("Body"=str_remove_all(Body,"<.+?>"))
#iterating through the answers and finding the words, finding the mean length and then adding it to the mean word length column
for(i in 1:nrow(answers_cleaned)){
answers_cleaned[i,7]=mean(str_length(str_extract_all(answers_cleaned[i,6],boundary("word"))[[1]]))
}
#same but for questions
for(i in 1:nrow(questions_cleaned)){
questions_cleaned[i,7]=mean(str_length(str_extract_all(questions_cleaned[i,6],boundary("word"))[[1]]))
}
#renming columns
answers_cleaned<-answers_cleaned%>%rename("mean_word_length"=V7)
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
ggplot(data=merged)+geom_col(aes(total_time,Score.answers))
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total Time between question creation and Answer")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
ggplot(data=merged)+geom_bin2d(aes(total_time,Score.answers))
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>")) #removing HTML tags since they shouldn't be counted as words
questions_cleaned<-questions%>%mutate("Body"=str_remove_all(Body,"<.+?>"))
#iterating through the answers and finding the words, finding the mean length and then adding it to the mean word length column
for(i in 1:nrow(answers_cleaned)){
answers_cleaned[i,7]=mean(str_length(str_extract_all(answers_cleaned[i,6],boundary("word"))[[1]]))
}
#same but for questions
for(i in 1:nrow(questions_cleaned)){
questions_cleaned[i,7]=mean(str_length(str_extract_all(questions_cleaned[i,6],boundary("word"))[[1]]))
}
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("mean_word_length") #removing HTML tags since they shouldn't be counted as words
questions_cleaned<-questions%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("mean_word_length")
#iterating through the answers and finding the words, finding the mean length and then adding it to the mean word length column
for(i in 1:nrow(answers_cleaned)){
answers_cleaned[i,7]=mean(str_length(str_extract_all(answers_cleaned[i,6],boundary("word"))[[1]]))
}
#same but for questions
for(i in 1:nrow(questions_cleaned)){
questions_cleaned[i,7]=mean(str_length(str_extract_all(questions_cleaned[i,6],boundary("word"))[[1]]))
}
ggplot(answers_cleaned,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()+labs(title="Answer Mean word length and Score",x="Mean Word Length",y="Score")
answers_cleaned<-answers%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("mean_word_length"=2) #removing HTML tags since they shouldn't be counted as words
questions_cleaned<-questions%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("mean_word_length"=2)
#iterating through the answers and finding the words, finding the mean length and then adding it to the mean word length column
for(i in 1:nrow(answers_cleaned)){
answers_cleaned[i,7]=mean(str_length(str_extract_all(answers_cleaned[i,6],boundary("word"))[[1]]))
}
#same but for questions
for(i in 1:nrow(questions_cleaned)){
questions_cleaned[i,7]=mean(str_length(str_extract_all(questions_cleaned[i,6],boundary("word"))[[1]]))
}
answers_cleaned
questions_cleaned
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(lubridate)
answers<-read_csv(file="Answers_trunc.csv",col_types=cols(CreationDate=col_datetime()))
questions<-read_csv(file="Questions_trunc.csv",col_types=cols(CreationDate=col_datetime()))
answers<-answers%>%select(-X7)
questions<-questions%>%select(-X7)
answersb<-answers
questionsb<-questions
merged <- answers %>%
left_join(questions, c('ParentId' = 'Id'),suffix=c(".answers",".questions"))
merged <- merged %>%
mutate(total_time = CreationDate.answers - CreationDate.questions) %>%
filter(total_time>0)
answers_cleaned<-answersb%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("mean_word_length"=2) #removing HTML tags since they shouldn't be counted as words
questions_cleaned<-questionsb%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("mean_word_length"=2)
#iterating through the answers and finding the words, finding the mean length and then adding it to the mean word length column
for(i in 1:nrow(answers_cleaned)){
answers_cleaned[i,7]=mean(str_length(str_extract_all(answers_cleaned[i,6],boundary("word"))[[1]]))
}
#same but for questions
for(i in 1:nrow(questions_cleaned)){
questions_cleaned[i,7]=mean(str_length(str_extract_all(questions_cleaned[i,6],boundary("word"))[[1]]))
}
answers_cleaned
questions_cleaned
ggplot(answers_cleaned,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()+labs(title="Answer Mean word length and Score",x="Mean Word Length",y="Score")
ggplot(answers_cleaned,aes(mean_word_length))+geom_density()+labs(title="Histogram of Mean word Length for Answers",x="Mean Word Length")
ggplot(questions_cleaned,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()+labs(title="Question Mean word length and Score",x="Mean Word Length",y="Score")
ggplot(questions_cleaned,aes(mean_word_length))+geom_density()+labs(title="Histogram of Mean word Length for Questions",x="Mean Word Length")
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total Time between question creation and Answer")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers), bins=100)  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total Time between question creation and Answer")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers), bins=1000)  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total Time between question creation and Answer")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 20))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total Time between question creation and Answer")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 30))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total Time between question creation and Answer")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
arrange(answers_cleaned,mean_word_length)
arrange(answers_cleaned,desc(mean_word_length))
arrange(answers_cleaned,desc(mean_word_length))
filter(questions,Id==1257784)
arrange(answers_cleaned,desc(mean_word_length))
filter(questions,Id==1257784)
questions
arrange(answers_cleaned,desc(mean_word_length))
filter(questions,Id==1257727)
questions
arrange(answers_cleaned,desc(mean_word_length))
filter(questions,'Id'==1257727)
questions
arrange(answers_cleaned,desc(mean_word_length))
filter(questions,Id==1257727)
questions
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(lubridate)
answers<-read_csv(file="Answers_trunc.csv",col_types=cols(CreationDate=col_datetime()))
questions<-read_csv(file="Questions_trunc.csv",col_types=cols(CreationDate=col_datetime()))
answers<-answers%>%select(-X7)
questions<-questions%>%select(-X7)
answersb<-answers
questionsb<-questions
merged <- answers %>%
left_join(questions, c('ParentId' = 'Id'),suffix=c(".answers",".questions"))
merged <- merged %>%
mutate(total_time = CreationDate.answers - CreationDate.questions) %>%
filter(total_time>0)
### look at histogram of scores, and total time
## make sure to play around with xlim
ggplot(merged) + geom_histogram(aes(Score.answers), bins=100)  + xlim(c(0, 30))+labs(title="Score of the Answers",x="Answers Score")
ggplot(merged) + geom_density(aes(Score.answers))  + xlim(c(0, 30))+labs(title="Distribution of Answers Score",x="Score of Answer")
# is this normally distributed?
ggplot(merged) + geom_density(aes(total_time)) +xlim(c(0, 2000))+labs(title="Total Time Density Plot",x="Total Time between question creation and Answer")
# is this normally distributed?
### how does score change as time elapses
### investigating timeliness
ggplot(data = (merged)) +
geom_jitter(mapping = aes(x = total_time, y = Score.answers), size=0.1)+xlim(0,5000) +labs(title="Answers score over time",x="Time since questions Creation",y="Score of Answer")
questions <- questions %>% mutate(letters_body = str_count(Body, regex("[a-z]", ignore_case = T)))
ggplot(data = questions, mapping = aes(x = letters_body, y = Score)) + geom_jitter() + xlim(c(0, 3000)) + labs(title = "Question Body Length vs. Score", x = "Number of letters in body of question", y = "Score")
ggplot(data = questions, mapping = aes(x = letters_body, y = Score)) + geom_jitter() + xlim(c(0, 500))+ labs(title = "Question Body Length vs. Score", x = "Number of letters in body of question", y = "Score")
ggplot(data = questions, mapping = aes(x = letters_body)) + geom_density() + labs(title = "Question Body Length vs. Density", x = "Number of letters in body of question", y = "Density of question body length")
ggplot(data = questions, mapping = aes(x = letters_body)) + geom_density() + xlim(c(0, 1000))+ labs(title = "Question Body Length vs. Density", x = "Number of letters in body of question", y = "Density of question body length")
answers <- answers %>% mutate(python_true = str_detect(Body, regex("python", ignore_case = T)))
ggplot(data = answers, mapping = aes(x = python_true, y = Score)) + geom_jitter() + labs(title = "Usage of the word python(true or false) vs. Score", x = "Usage of the word python in the response (true or false)", y = "Score")
answers_cleaned<-answersb%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("mean_word_length"=2) #removing HTML tags since they shouldn't be counted as words
questions_cleaned<-questionsb%>%mutate("Body"=str_remove_all(Body,"<.+?>"))%>%mutate("mean_word_length"=2)
#iterating through the answers and finding the words, finding the mean length and then adding it to the mean word length column
for(i in 1:nrow(answers_cleaned)){
answers_cleaned[i,7]=mean(str_length(str_extract_all(answers_cleaned[i,6],boundary("word"))[[1]]))
}
#same but for questions
for(i in 1:nrow(questions_cleaned)){
questions_cleaned[i,7]=mean(str_length(str_extract_all(questions_cleaned[i,6],boundary("word"))[[1]]))
}
ggplot(answers_cleaned,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()+labs(title="Answer Mean word length and Score",x="Mean Word Length",y="Score")
ggplot(answers_cleaned,aes(mean_word_length))+geom_density()+labs(title="Histogram of Mean word Length for Answers",x="Mean Word Length")
ggplot(questions_cleaned,aes(mean_word_length,Score,color=hour(CreationDate)))+geom_point()+labs(title="Question Mean word length and Score",x="Mean Word Length",y="Score")
ggplot(questions_cleaned,aes(mean_word_length))+geom_density()+labs(title="Histogram of Mean word Length for Questions",x="Mean Word Length")
ptitle <- questions %>% filter(Score > 10) %>% mutate(p = str_detect(Title, regex("[Pp]ython")))
ggplot(data = ptitle) + geom_jitter(aes(x = p, y = Score, color = Score), scale = "area") + ggtitle("Python appearing in the title vs. Score") + labs(y = "Score", x = "Usage of Python in title")
cpptitle <- questions %>% filter(Score > 10) %>% mutate(cpp = str_detect(Title, regex("[Cc]++")))
ggplot(data = cpptitle) + geom_jitter(aes(x = cpp, y = Score, color = Score), scale = "area") + ggtitle("C++ appearing in the title vs. Score") + labs(x = "Usage of C++ in the title vs. Score")
feature <- answers %>% filter(Score > 0) %>% mutate(length = str_count(Body, regex("[a-z]", ingore_case = TRUE)))
ggplot(data = feature) + geom_point(aes(x = Score, y = length)) + ylim(0,5000) + ggtitle("Answer Score vs. Length of Response") %>% labs(x = "Score", y = "Length")
